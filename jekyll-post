#!/usr/bin/python

"""
jekyll-post - this is a simple script that will create and initialize a new
Jekyll post file. The default is a markdown file (.md) and the yaml options
listed below will be part of the initialization.

jekyll-post [-w] [-d date] [title]

title   the title of the post wrapped in quotes, e.g. "post title here"
-d      the default date is today's date or this option can be used to specify
        a date. The date must be specified in the format YYYY-MM-DD.
-w      this optional flag will signal the file to be opened for writing in vi

yaml options
---
layout: post
title: [title]
summary:
status: draft
hn-discussion:
---
"""

# Import Statements
import argparse
import datetime
import subprocess

DEFAULT_EXT = 'md'

def main():
    # parse the arguments
    parser = argparse.ArgumentParser(description='Create a new Jekyll post.')
    parser.add_argument('title', help='the title of the post wrapped in quotes.')
    parser.add_argument('-d', '--date', help='specify the post date in the format YYYY-MM-DD, otherwise today is the default date.')
    parser.add_argument('-w', '--write', action="store_true",
        help='signals if this file should be opened for writing after creation')
    args = parser.parse_args()

    title = args.title
    # exchange spaces for dashes
    dash_title = title.replace(' ','-')

    date = None
    if args.date:
        date = args.date
    else:
        # use today's date
        today = datetime.datetime.now()
        year = str(today.year)
        month = str(today.month)
        if len(month) == 1:
            month = '0' + month
        #month = today.month > 9 ? str(today.month) : '0' + str(today.month)
        day = str(today.day)
        if len(day) == 1:
            day = '0' + day
        #day = today.day > 9 ? str(today.day) : '0' + str(today.day)
        date = "-".join([year,month,day])

    #filename = '%s-%s.%s', date, title, DEFAULT_EXT
    filename = date + '-' + dash_title + '.' + DEFAULT_EXT

    f = open(filename, 'w')

    # write yaml to file
    f.write('---\n')
    f.write('layout: post\n')
    f.write('title: ' + title + '\n')
    f.write('summary:\n')
    f.write('status: draft\n')
    f.write('hn-discussion:\n')
    f.write('---\n\n')

    f.close()

    if args.write:
        subprocess.call(['vi', filename])

if __name__ == '__main__':
    main()

